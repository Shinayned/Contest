function edfo__init(){
	var wrapper=$('.editlist__wrapper');

	/* prevent double init */	
	if( wrapper.attr('data-init-status')!='undefined' && (wrapper.attr('data-init-status')=='inited' || wrapper.attr('data-init-status')=='begin') ){
		console.log('error: editlist already inited');
		return;
	}
	
	wrapper.attr('data-init-status','begin');

	var edfo__fields="li_type,li_name,li_title,li_subtitle,li_ph,li_rule,li_req,li_rows,li_variants,li_text,li_label,li_uckey,li_uwkey,li_mask,li_value,li_dateformat,li_datediv,li_checked,li_defselitem,li_selfirstvar,li_radcb,li_btntitle,li_btntitle2,li_inp,li_vmin,li_vmax,li_step,li_expr,li_prefix,li_postfix,li_gallery,li_imgratio,li_multiupl".split(',');	
	window.edfo__fields=edfo__fields;
	
	//params
	window.edfo__params__formhorizontal='';
	window.edfo__params__formcart='';
	window.edfo__params__maxinputs='';
	var edfo__paramsstr=wrapper.attr('data-foparams');	
	if(typeof edfo__paramsstr!='undefined' && edfo__paramsstr!=''){
		var edfo__params=edfo__paramsstr.split(',');
	}
	if(typeof edfo__params=='object'){
		edfo__params.forEach(function(param, i, arr) {
			if(param=='formhorizontal'){
				window.edfo__params__formhorizontal='y';
			}
			if(param=='formcart'){
				window.edfo__params__formcart='y';
			}			
		});		
	}
	
	//go	
	var datastr=$('.editlist__data').html();
	if(datastr=='')datastr="{}";
	var data=JSON.parse(datastr);

	data=edfo__dublCheck_Ids(data);
	for(var key in data){
		edfo__drawItem( data[key] );
	}
	
	wrapper.attr('data-init-status','inited');
	  
}

function edfo__dublCheck_Ids(data){
	var ids=[];
	var item;
	var lid;
	var i=0;
	for(var key in data){
		item=data[key];
		if (item != null && typeof item == 'object') {
			
			i++;
			data[key]['i']=i;
			
			lid=item['lid'];
			if (lid in ids){
				var rnd=Math.floor(Math.random() * 1000) + 10;
				var newlid=Date.now() - rnd;
				console.log('new lid: '+newlid);
				data[key]['lid']=newlid;
			}else{
				ids[lid]='y';
			}
			
		}else{
			delete data[key];
		}
	}
	
	return data;
}

function edfo__drawItem(item,afterlid){
	
	//console.log(item);
	var wrapper=$('.editlist__wrapper');
    var lid=item['lid'];
    var ls=item['ls'];
    var loff=item['loff'];
	var fields=window.edfo__fields;
    
	var str = '';
	str += '<div class="pe-list-item" data-listitem-id="'+lid+'" data-listitem-sort="'+ls+'" data-listitem-off="'+loff+'" style="background-color:#efefef; padding:40px; margin:10px 0px; '+(loff=='y' ? 'opacity:0.5;' : '')+'">';	
	str += '<div class="pe-list-item-title" style="padding:0px 0px 35px 0px;">';
	str += '<table style="width:100%; font-size:12px;">';
	str += '<tr>';	
	str += '<td style="width:100%; letter-spacing:1px;"><b>'+(lang=="RU" ? "ПОЛЕ" : "INPUT")+' <span class="pe-list-item-i">'+item['i']+'</span></b></td>';
	str += '<td style="padding:0 10px;"><a href="javascript:edfo__dupl('+lid+')">'+(lang=="RU" ? "Дублировать" : "Duplicate")+'</a></td>';
	str += '<td class="pe-list-item-btn-offon" style="padding:0 10px;"><a href="javascript:edfo__off('+lid+')">';	
	if(item['loff']=='y'){
	str += ''+(lang=="RU" ? "Включить" : "On")+'';
	}else{
	str += ''+(lang=="RU" ? "Выключить" : "Off")+'';	
	}
	str += '</a></td>';	
	str += '<td style="padding:0 10px;"><a href="javascript:edfo__del('+lid+')">'+(lang=="RU" ? "Удалить" : "Delete")+'</a></td>';	
	str += '<td style="padding:0 10px;"><a href="javascript:edfo__up('+lid+')">'+(lang=="RU" ? "Вверх" : "Up")+'</a></td>';	
	str += '<td style="padding:0 0 0 10px;"><a href="javascript:edfo__down('+lid+')">'+(lang=="RU" ? "Вниз" : "Down")+'</a></td>';		
	str += '</div>';
	str += '</div>';
	
	if(afterlid>0){
		var afteritemwrapper=wrapper.find('[data-listitem-id='+afterlid+']');		
		afteritemwrapper.after(str);
	}else{	
		wrapper.append(str);
	}
	
	edfo__drawFields(item,lid);
		
	//console.log(item);	
	
}


function edfo__drawFields(item,lid){
	
	var lt='';
	if(typeof item['li_type']!='undefined' && item['li_type']!=''){
		lt=item['li_type'];
	}
	
	//console.log(lt);
		
	edfo__drawUI__select(item['li_type'],'li_type',lid);
	
	if(lt=='pc'){
		edfo__drawUI__help(lid,lt);
	}	
	
	if(lt=='em' || lt=='ph' || lt=='nm' || lt=='in' || lt=='ta' || lt=='da' || lt=='tm' || lt=='ur' || lt=='qn' || lt=='pc'){
		edfo__drawUI__input(item['li_ph'],'li_ph',lid,lt);
	}	
	
	if(lt=='uc'){
		edfo__drawUI__input(item['li_uckey'],'li_uckey',lid,lt);	
	}

	if(lt=='uw'){
		edfo__drawUI__input(item['li_uwkey'],'li_uwkey',lid,lt);	
	}
			
	if(lt=='em' || lt=='ph' || lt=='nm' || lt=='in' || lt=='ta' || lt=='sb' || lt=='rd' || lt=='cb' || lt=='uc' || lt=='uw' || lt=='da' || lt=='tm' || lt=='ur' || lt=='qn' || lt=='rg' || lt=='dl' || lt=='pc' || lt=='fr' || lt=='ri'){
		edfo__drawUI__input(item['li_title'],'li_title',lid,lt);
	}

	if(lt=='em' || lt=='ph' || lt=='nm' || lt=='in' || lt=='ta' || lt=='sb' || lt=='rd' || lt=='cb' || lt=='uc' || lt=='uw' || lt=='da' || lt=='tm' || lt=='ur' || lt=='qn' || lt=='rg' || lt=='dl' || lt=='pc' || lt=='fr' || lt=='ri'){
		edfo__drawUI__input(item['li_subtitle'],'li_subtitle',lid,lt);
	}
	
	if(lt=='cb'){
		edfo__drawUI__text(item['li_label'],'li_label',lid,lt);
	}

	if(lt=='sb' || lt=='rd' || lt=='dl'){
		edfo__drawUI__textarea(item['li_variants'],'li_variants',lid,lt);	
	}

	if(lt=='rd' || lt=='ri'){
		edfo__drawUI__select(item['li_radcb'],'li_radcb',lid);
	}

	if(lt=='ta' || lt=='ws'){
		edfo__drawUI__select(item['li_rows'],'li_rows',lid);	
	}

	if(lt=='em' || lt=='ph' || lt=='nm' || lt=='in' || lt=='ta' || lt=='sb' || lt=='rd' || lt=='cb' || lt=='uc' || lt=='uw' || lt=='hd' || lt=='da' || lt=='tm' || lt=='ur' || lt=='qn' || lt=='rg' || lt=='dl' || lt=='fr' || lt=='ri'){
		edfo__drawUI__input(item['li_name'],'li_name',lid,lt);
	}

	if(lt=='da'){
		edfo__drawUI__select(item['li_dateformat'],'li_dateformat',lid);
	}

	if(lt=='da'){
		edfo__drawUI__select(item['li_datediv'],'li_datediv',lid);
	}
	
	if(lt=='cb'){
		edfo__drawUI__checkbox(item['li_checked'],'li_checked',lid);
	}	

	if(lt=='sb'){
		edfo__drawUI__input(item['li_selfirstvar'],'li_selfirstvar',lid,lt);
	}	
	
	if(lt=='ri'){
		edfo__drawUI__gallery(item['li_gallery'],'li_gallery',lid,lt);
	}	
	
	if(lt=='in'){
		edfo__drawUI__select(item['li_rule'],'li_rule',lid);
	}

	if(lt=='ph' || lt=='in'){
		edfo__drawUI__input(item['li_mask'],'li_mask',lid,lt);
	}

	if(lt=='sb' || lt=='rd' || lt=='dl' || lt=='ri'){
		edfo__drawUI__input(item['li_defselitem'],'li_defselitem',lid,lt);
	}
	
	if(lt=='tx'){
		edfo__drawUI__text(item['li_text'],'li_text',lid);	
	}

	if(lt=='pc'){
		edfo__drawUI__input(item['li_btntitle'],'li_btntitle',lid,lt);
	}	

	if(lt=='uc'){
		edfo__drawUI__input(item['li_inp'],'li_inp',lid,lt);
	}	
	
	if(lt=='em' || lt=='ph' || lt=='nm' || lt=='in' || lt=='ta' || lt=='sb' || lt=='rd' || lt=='cb' || lt=='uc' || lt=='uw' || lt=='da' || lt=='tm' || lt=='ur' || lt=='qn' || lt=='dl' || lt=='ri'){
		edfo__drawUI__checkbox(item['li_req'],'li_req',lid);
	}
	
	if(lt=='hd' || lt=='qn' || lt=='rg'){
		edfo__drawUI__input(item['li_value'],'li_value',lid,lt);
	}	

	if(lt=='rg'){
		edfo__drawUI__input(item['li_vmin'],'li_vmin',lid,lt);
	}	

	if(lt=='rg'){
		edfo__drawUI__input(item['li_vmax'],'li_vmax',lid,lt);
	}	

	if(lt=='rg'){
		edfo__drawUI__input(item['li_step'],'li_step',lid,lt);
	}	

	if(lt=='fr'){
		edfo__drawUI__input(item['li_expr'],'li_expr',lid,lt);
	}	

	if(lt=='fr'){
		edfo__drawUI__input(item['li_prefix'],'li_prefix',lid,lt);
	}	

	if(lt=='fr'){
		edfo__drawUI__input(item['li_postfix'],'li_postfix',lid,lt);
	}	
	
	if(lt=='ri'){
		edfo__drawUI__select(item['li_imgratio'],'li_imgratio',lid);
	}	
	
	if(lt=='uw'){
		edfo__drawUI__checkbox(item['li_multiupl'],'li_multiupl',lid);
	}	
	
	if(lt=='st'){
		edfo__drawUI__input(item['li_btntitle'],'li_btntitle',lid,lt);
	}	

	if(lt=='st'){
		edfo__drawUI__input(item['li_btntitle2'],'li_btntitle2',lid,lt);
	}	
	
}

function edfo__drawUI__help(lid,lt){
		
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
			
	var msg='';	
	if(lt=='pc'){
		msg = (lang=="RU" ? "Создать промокод можно в Настройках сайта > Платежные системы  > <a href='/projects/payments/promocodes/?projectid="+window.tildaprojectid+"' target='_blank'>Промокоды</a>" : "You can create a promo code in Site Settings > Payment system > <a href='/projects/payments/promocodes/?projectid="+window.tildaprojectid+"' target='_blank'>Promo codes</a>");
	}	
		
	var str = '';

	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'">';
	if(hint!=''){
	str += '    <div class="pe-hint">'+msg+'</div>';	
	}
	str += '</div>';
	
	itemwrapper.append(str);
		
}

function edfo__drawUI__input(value,field,lid,lt){
	
	//params
	if(window.edfo__params__formhorizontal=='y' && field=='li_title'){
		//return;
	}
	
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
		
	if ( typeof value == 'undefined')value='';

	//quotes and spec symbols
	value=edfo__escapeHtml(value);
	
	var label=field;
	if(label=='li_name')label = (lang=="RU" ? "Имя переменной" : "Variable name");
	if(label=='li_title')label = (lang=="RU" ? "Заголовок поля" : "Input Title");
	if(label=='li_subtitle')label = (lang=="RU" ? "Подзаголовок поля" : "Input Subtitle");
	if(label=='li_ph')label = (lang=="RU" ? "Подсказка значения" : "Input Placeholder");
	if(label=='li_label')label = (lang=="RU" ? "Лейбл" : "Label");
	if(label=='li_uckey')label = (lang=="RU" ? "Uploadcare Public Key" : "Uploadcare Public Key");
	if(label=='li_uwkey')label = (lang=="RU" ? "Tilda Upload Widget Key" : "Tilda Upload Widget Key");
	if(label=='li_mask')label = (lang=="RU" ? "Маска" : "Mask");
	if(label=='li_value')label = (lang=="RU" ? "Значение" : "Value");
	if(label=='li_date')label = (lang=="RU" ? "Дата" : "Date");
	if(label=='li_time')label = (lang=="RU" ? "Время" : "Time");
	if(label=='li_url')label = (lang=="RU" ? "Ссылка" : "Website");
	if(label=='li_defselitem')label = (lang=="RU" ? "Номер варианта по умолчанию" : "Item number in list by default");	
	if(field=='li_selfirstvar')label = (lang=="RU" ? "Первый вариант в списке с пустым значением" : "The first variant in the list with empty value");
	if(label=='li_btntitle')label = (lang=="RU" ? "Текст кнопки" : "Button caption");
	if(label=='li_btntitle2')label = (lang=="RU" ? "Текст кнопки 2" : "Button caption 2");
	if(label=='li_vmin')label = (lang=="RU" ? "Минимальное значение" : "Min value");
	if(label=='li_vmax')label = (lang=="RU" ? "Максимальное значение" : "Max value");
	if(label=='li_step')label = (lang=="RU" ? "Размер шага" : "Step size");
	if(label=='li_expr')label = (lang=="RU" ? "Формула для вычисления значения" : "Arithmetic expression");
	if(label=='li_prefix')label = (lang=="RU" ? "Текст перед результатом вычисления" : "Text before resulting value");
	if(label=='li_postfix')label = (lang=="RU" ? "Текст после результата вычисления" : "Text after resulting value");

	var hint='';
	if(field=='li_uckey')hint = (lang=="RU" ? "Мы не предоставляем услугу хранения файлов, поэтому вам нужно воспользоваться внешним сервисом Uploadcare. Пожалуйста, укажите публичный ключ. Читайте подробную инструкцию в <a href='http://help-ru.tilda.ws/uploadcare-api-key' target='_blank'>справочном центре</a>" : "We don't provide a file hosting service, so you need to use an external service Uploadcare. Please set Public Key. Read the detailed instruction in the <a href='http://help.tilda.ws/uploadcare-api-key' target='_blank'>Help Center</a>.");	
	if(field=='li_uwkey')hint = (lang=="RU" ? "Укажите ключ, чтобы сохранять файлы на Яндекс.Диск или в Dropbox. <a href='https://tilda.cc/identity/goupwidget/' target='_blank'>Получить ключ.</a>" : "Specify a key to save files on Dropbox or Yandex.Disk. <a href='https://tilda.cc/identity/goupwidget/' target='_blank'>Get the key.</a>");	
	if(field=='li_variants')hint = (lang=="RU" ? 'Укажите несколько вариантов, отделяя их точкой с запятой ";"<br>Пример: small;medium;large' : 'Put some variants and divide them with semicolon ";"<br>Example: small;medium;large');	
	if(field=='li_mask')hint = (lang=="RU" ? "Задайте свой формат ввода данных, где «9» — любая цифра, латинская «a» — любая буква, а «*» — любой символ.<br>Пример: +7 (999) 999-9999<br>Подробную инструкцию по работе с маской читайте в <a href='http://help-ru.tilda.ws/mask' target='_blank'>справочном центре</a>" : "Define your own data entry format, where «9» is any digit, «a» is any letter and «*» is any symbol.<br>Example: +1 (999) 999-9999.<br>Read the detailed instruction in the <a href='http://help.tilda.ws/mask' target='_blank'>Help Center</a>.");		
	if(field=='li_name')hint = (lang=="RU" ? "Системное название для идентификации данных из разных полей (не отображается). Рекомендуется использовать латиницу. Не обязательно для заполнения." : "This is a system name that allows specifying data from the different fields (not displayed). Not necessarily.");			
	if(field=='li_defselitem')hint = (lang=="RU" ? "Укажите номер в списке. Например: 1" : "Set number in list. Example: 1");
	if(field=='li_selfirstvar')hint = (lang=="RU" ? "Показывается первым в списке. Например: 'Выберите вариант из списка...'" : "Will be shown firstly in the list. E.g., 'Choose variant from the list'");			
	if(field=='li_expr'){
		if(lang=='RU'){
			hint = "С помощью этого типа поля вы можете вывести в форме стоимость товара или услуги, рассчитанные по формуле. В качестве переменных используйте имена переменных полей для ввода.<br><br>Пример: a * b<br><br>Как работает калькулятор:<br>— создайте нужные вам поля для ввода (например: высота, ширина)<br>— у каждого пропишите «Имя переменной» латинскими буквами (например: width, height)<br>— напишите формулу рассчета, используя простые математические операторы: +, -, *, /, () (например: width * height)<br>— теперь, когда пользователь будет заполнять поля высоты и ширины, в поле с формулой автоматически будет рассчитываться значение<br><br>Подробнее читайте в <a href='http://help-ru.tilda.ws/forms-calculator' target='_blank'>инструкции</a>";
		}else{
			hint = "This input type you will help you to count a price of any product or service. Use variable names from other fields as variables.<br><br>Example: a * b<br><br>How it works:<br>— create inputs, which you need (example: height, width)<br>— fill variable name with Latin symbols (example: width, height)<br>— input your formula, using simple math operators: +, -, *, /, () (example: width * height)<br>— after that when user will fill width and height inputs, in formula field they will see a calculated value<br><br>Learn more in <a href='http://help.tilda.ws/forms-calculator' target='_blank'>help center</a>";
		}
	}

	var ph='';
	if(lt=='em'){
		if(field=='li_ph')ph = (lang=="RU" ? "example@site.com" : "example@site.com");	
		if(field=='li_title')ph = (lang=="RU" ? "Ваш e-mail" : "Your E-mail");
		if(field=='li_name')ph = 'email';		
	}
	if(lt=='ph'){
		if(field=='li_ph')ph = (lang=="RU" ? "+1 123 456 78 90" : "+1 123 456 78 90");	
		if(field=='li_title')ph = (lang=="RU" ? "Ваш телефон" : "Your Phone");	
		if(field=='li_name')ph = 'phone';		
	}	
	if(lt=='nm'){
		if(field=='li_ph')ph = (lang=="RU" ? "Иван Смирнов" : "John Smith");
		if(field=='li_title')ph = (lang=="RU" ? "Ваше имя" : "Your Name");		
		if(field=='li_name')ph = 'name';		
	}	
	if(lt=='in'){
		if(field=='li_ph')ph = (lang=="RU" ? "" : "");
		if(field=='li_title')ph = (lang=="RU" ? "" : "");		
		if(field=='li_name')ph = '';		
	}
	if(lt=='cb'){
		if(field=='li_title')ph = (lang=="RU" ? "Заголовок поля" : "Input Title");
		if(field=='li_label')ph = (lang=="RU" ? "Я согласен c политикой конфиденциальности" : "I agree with terms of Privacy Policy");		
		if(field=='li_name')ph = 'checkbox';		
	}	
	if(lt=='sb' || lt=='rd'){
		if(field=='li_title')ph = (lang=="RU" ? "Выберите Цвет" : "Choose Color");		
		if(field=='li_name')ph = 'color';
	}	
	if(lt=='dl'){
		if(field=='li_title')ph = (lang=="RU" ? "Доставка" : "Delivery");		
		if(field=='li_name')ph = 'delivery';
	}		
	if(lt=='da'){
		if(field=='li_ph')ph = (lang=="RU" ? "01-01-2019" : "2018-01-01");
		if(field=='li_title')ph = (lang=="RU" ? "Дата" : "Date");		
		if(field=='li_name')ph = 'date';		
	}	
	if(lt=='uc'){
		if(field=='li_uckey')ph = (lang=="RU" ? "demopublickey" : "demopublickey");			
		if(field=='li_title')ph = (lang=="RU" ? "Ваше резюме" : "Your Resume");		
		if(field=='li_name')ph = 'file';
		if(field=='li_btntitle')ph = (lang=="RU" ? "Выберите файл" : "Choose a file");
		if(field=='li_inp'){
			label = (lang=="RU" ? "Локализация" : "Local");
			ph = (lang=="RU" ? "ru" : "en");
			hint = "The widget supports a good number of languages. Currently there are: en  ru  ar  az  ca  cs  da  de  es  et  fr  he  it  ja  lv  nb  nl  pl  pt  sv  tr  zhTW  zh";
		}
	}		
	if(lt=='uw'){
		if(field=='li_uwkey')ph = (lang=="RU" ? "" : "");
		if(field=='li_title')ph = (lang=="RU" ? "Ваше резюме" : "Your Resume");		
		if(field=='li_name')ph = 'file';
		if(field=='li_btntitle')ph = (lang=="RU" ? "Выберите файл" : "Choose a file");
	}			
	if(lt=='tm'){
		if(field=='li_ph')ph = (lang=="RU" ? "10:00" : "10:00");
		if(field=='li_title')ph = (lang=="RU" ? "Время" : "Time");		
		if(field=='li_name')ph = 'time';		
	}
	if(lt=='qn'){
		if(field=='li_ph')ph = (lang=="RU" ? "1" : "1");
		if(field=='li_title')ph = (lang=="RU" ? "Выберите кол-во" : "Choose Quantity");		
		if(field=='li_name')ph = 'quantity';		
	}	
	if(lt=='ur'){
		if(field=='li_ph')ph = (lang=="RU" ? "http://site.com" : "http://site.com");
		if(field=='li_title')ph = (lang=="RU" ? "Адрес сайта" : "Website");		
		if(field=='li_name')ph = 'website';		
	}	
	if(field=='li_defselitem')ph = '1';	
	if(field=='li_selfirstvar')ph = (lang=="RU" ? "Выберите вариант из списка" : "Choose variant");		
	if(lt=='pc'){
		if(field=='li_title')ph = (lang=="RU" ? "Промокод" : "Promo code");
		if(field=='li_ph')ph = (lang=="RU" ? "Введите промокод" : "Enter promo code here");
		if(field=='li_btntitle')ph = (lang=="RU" ? "Активировать" : "Activate");
		if(field=='li_name')ph = 'promocode';
	}	
	
	if(field=='li_prefix')ph = (lang=="RU" ? "Например: Итого:" : "e.g. $ or Total amount");
	if(field=='li_postfix')ph = (lang=="RU" ? "Например: руб." : "e.g. per month");
	if(field=='li_expr')ph = (lang=="RU" ? "a * b" : "a * b");
	
	if(lt=='st'){	
		if(field=='li_btntitle')label = (lang=="RU" ? "Текст кнопки вперед" : "Next button caption");
		if(field=='li_btntitle2')label = (lang=="RU" ? "Текст кнопки назад" : "Prev. button caption");
		
		if(field=='li_btntitle')ph = (lang=="RU" ? "Вперед" : "Next");
		if(field=='li_btntitle2')ph = (lang=="RU" ? "Назад" : "Back");
	}
		
	var str = '';

	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'">';
	str += '    <label class="pe-label">'+label+'</label>';
	str += '    <input type="text" name="'+field+'" class="pe-input" value="'+value+'" placeholder="'+ph+'"/>';
	if(hint!=''){
	str += '    <div class="pe-hint">'+hint+'</div>';	
	}
	str += '</div>';
	
	itemwrapper.append(str);
	
	var inp=itemwrapper.find("[name="+field+"]");
	
	inp.change(function() {
		var v=inp.val();
		edfo__setFieldValue(v,field,lid);
	});
	
}

function edfo__drawUI__checkbox(value,field,lid){
	
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	
	if ( typeof value == 'undefined')value='';
	//quotes and spec symbols
	value=edfo__escapeHtml(value);
	
	var label=field;
	if(label=='li_req')label = (lang=="RU" ? "Обязательно для заполнения" : "Required");	
	if(label=='li_checked')label = (lang=="RU" ? "Отмечено по умолчанию" : "Checked by default");	
	if(label=='li_multiupl')label = (lang=="RU" ? "Разрешить загрузку нескольких файлов (макс. 10)" : "Allow to upload multiple files (max: 10)");
		
	var str = '';
	
	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'">';
	
	str += '<div class="pe-checkbox-box">';
	str += '<label class="pe-label-checkbox">';
	str += '	  <table class="cb_nonchecked" style="display:'+(value=='y' ? 'none' : 'table')+';"><tr><td><div style="background:url(/tpl/img/popups/all-icons.svg) no-repeat -56px -222px; width:23px; height:24px; margin-right:10px;"></div></td><td>'+label+'</td></tr></table>';
	str += '	  <table class="cb_checked" style="display:'+(value=='y' ? 'table' : 'none')+';"><tr><td><div style="background:url(/tpl/img/popups/all-icons.svg) no-repeat -22px -222px; width:23px; height:24px; margin-right:10px;"></div></td><td>'+label+'</td></tr></table>';
	str += '      <input type="checkbox" name="'+field+'-cb" '+(value=='y' ? "checked" : "")+' style="display:none;">';
	str += '      <input type="hidden" name="'+field+'" value="'+value+'"/>';	
	str += '</label>';
	str += '</div>';

	str += '</div>';
		
	itemwrapper.append(str);
	
	var inp=itemwrapper.find("[name="+field+"]");
	
	inp.change(function() {
		var v=inp.val();
		edfo__setFieldValue(v,field,lid);
	});
	
	var fieldwrapper=itemwrapper.find('[data-lfield='+field+']');
	
	itemwrapper.find("input[name="+field+"-cb]").change(function(){ 
		var tempv=$(this).is(':checked');
		if(tempv){
			fieldwrapper.find("input[name="+field+"]").val('y');
			fieldwrapper.find('.cb_checked').css('display','table');
			fieldwrapper.find('.cb_nonchecked').css('display','none');
		}else{
			fieldwrapper.find("input[name="+field+"]").val('');
			fieldwrapper.find('.cb_checked').css('display','none');
			fieldwrapper.find('.cb_nonchecked').css('display','table');			
		}
	});								
	
}

function edfo__drawUI__text(value,field,lid,lt){
	
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	
	if ( typeof value == 'undefined')value='';
	//quotes and spec symbols
	value=edfo__escapeHtml(value);	
	
	var label=field;
	if(label=='li_text')label = (lang=="RU" ? "Текст" : "Text");
	if(label=='li_label')label = (lang=="RU" ? "Лейбл" : "Label");

	var ph='';
	if(lt=='cb'){
		if(field=='li_label')ph = (lang=="RU" ? "Я согласен c политикой конфиденциальности" : "I agree with terms of Privacy Policy");		
	}	
	
	
	var hint='';
	if(field=='li_text')hint = (lang=="RU" ? "Это просто текст для формы (не поле для ввода). Нужен, чтобы прокомментировать поля. Также можно использовать вместе с «отступом» , чтобы разбить поля на группы." : "This is plain text for the form (not an input field). It useful to comment fields. Also, can be used with 'padding' to divide fields into groups.");	
					
	var str = '';

	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'">';
	str += '    <label class="pe-label">'+label+'</label>';
	str += '    <div class="pe-redactor">';
	str += '    	<textarea name="'+field+'" class="pe-textarea" rows="2" placeholder="'+ph+'">'+value+'</textarea>';
	str += '    </div>';
	if(hint!=''){
	str += '    <div class="pe-hint">'+hint+'</div>';	
	}	
	str += '</div>';
	
	itemwrapper.append(str);
	
	var inp=itemwrapper.find("[name="+field+"]");
	
	inp.change(function() {
		//console.log('list item onchange input');
		var v=inp.val();
		edfo__setFieldValue(v,field,lid);
	});
	
	addRedactor_to_textarea(inp);
	
}

function edfo__drawUI__textarea(value,field,lid,lt){
	
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	
	if ( typeof value == 'undefined')value='';
	//quotes and spec symbols
	value=edfo__escapeHtml(value);	
	
	var label=field;
	if(label=='li_variants')label = (lang=="RU" ? "Варианты значения" : "Variants");
		
	var ph='';
	if(lt=='cb' || lt=='sb' || lt=='rd' || lt=='dl'){
		if(field=='li_variants')ph = (lang=="RU" ? "Перечислите варианты, отделяя их переносом строки" : "Set variants by dividing them with a new line");
	}		

	var hint='';
	if(lt=='dl'){
		if(field=='li_variants')hint = (lang=="RU" ? "Перечислите варианты доставки, отделяя их переносом строки. Если вариант доставки не бесплатный, поставьте знак = и укажите цену (только цифры, без знака валюты). <br><b>Например:</b><br>Самовывоз<br>Доставка курьером 250 руб. = 250" : "Put the delivery methods by dividing them with Enter. If shipping is not free, put the sign = and write a price (only numbers, without currency). <br><b>For example:</b><br>Customer Pickup<br>Standard Shipping $10 = 10");
	}				
		
	var str = '';

	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'">';
	str += '    <label class="pe-label">'+label+'</label>';
	str += '    <div class="">';
	str += '    	<textarea name="'+field+'" class="pe-textarea" rows="2" style="height:100px; box-sizing: border-box;margin-top:10px;" placeholder="'+ph+'">'+value+'</textarea>';
	str += '    </div>';
	if(hint!=''){
	str += '    <div class="pe-hint">'+hint+'</div>';	
	}	
	str += '</div>';
	
	itemwrapper.append(str);
	
	var inp=itemwrapper.find("[name="+field+"]");
	
	inp.change(function() {
		var v=inp.val();
		edfo__setFieldValue(v,field,lid);
	});
		
}


function edfo__drawUI__select(value,field,lid){
	
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	
	if ( typeof value == 'undefined')value='';
	//quotes and spec symbols
	value=edfo__escapeHtml(value);	
	
	if(field=='li_rows' && value=='')value='3';
	
	var label=field;
	if(label=='li_type')label = (lang=="RU" ? "Тип" : "Type");
	if(label=='li_rule')label = (lang=="RU" ? "Правило валидации" : "Validation rule");
	if(label=='li_rows')label = (lang=="RU" ? "Количество строк" : "Rows count");	
	if(label=='li_dateformat')label = (lang=="RU" ? "Формат даты" : "Date format");
	if(label=='li_datediv')label = (lang=="RU" ? "Вид разделителя" : "Divider format");	
	if(label=='li_radcb')label = (lang=="RU" ? "Вид ответа" : "Type of answer");	
	if(label=='li_imgratio')label = (lang=="RU" ? "Соотношение сторон" : "Image ratio format");	
	
	var hint='';
	if(field=='li_rule')hint = (lang=="RU" ? "Проверяет, что данные, которые ввел пользователь, соответствуют типу данных, который вы указали. (цифры в поле «Телефон», буквы в поле «Имя» и т.д.)" : "Verify that the data a user enters in a field meets the standards you specify before.");	
	
	if(field=='li_type'){
		if(window.edfo__params__formhorizontal=='y'){
			var options=[['','Выберите тип','Choose input type'],['em','E-mail','E-mail'],['ph','Телефон','Phone'],['nm','Имя','Name'],['in','Поле для ввода в одну строку','One line input field'],['sb','Выпадающий список','Dropdown'],['da','Дата','Date'],['tm','Время','Time'],['ur','Ссылка','Website'],['hd','Скрытое поле','Hidden field']];									
		}else if(window.edfo__params__formcart=='y'){
			var options=[['','Выберите тип','Choose input type'],['em','E-mail','E-mail'],['ph','Телефон','Phone'],['nm','Имя','Name'],['in','Поле для ввода в одну строку','One line input field'],['ta','Поле для ввода в несколько строк','Textarea with multiple lines'],['sb','Выпадающий список','Dropdown'],['rd','Вопрос с вариантами ответа','Question with answers'],['ri','Вопрос с вариантами ответа в виде картинок','Question with image answers'],['dl','Варианты доставки','Delivery variants'],['cb','Галочка','Checkbox'],['uw','Файл','File'],['uc','Файл (uploadcare)','File (uploadcare)'],['pc','Промокод','Promo code'],['da','Дата','Date'],['tm','Время','Time'],['ur','Ссылка','Website'],['tx','Текстовый комментарий','Text comment'],['ws','Отступ','White space'],['hd','Скрытое поле','Hidden field']];
		}else{
			var options=[['','Выберите тип','Choose input type'],['em','E-mail','E-mail'],['ph','Телефон','Phone'],['nm','Имя','Name'],['in','Поле для ввода в одну строку','One line input field'],['ta','Поле для ввода в несколько строк','Textarea with multiple lines'],['sb','Выпадающий список','Dropdown'],['rd','Вопрос с вариантами ответа','Question with answers'],['ri','Вопрос с вариантами ответа в виде картинок','Question with image answers'],['cb','Галочка','Checkbox'],['uw','Файл','File'],['uc','Файл (uploadcare)','File (uploadcare)'],['da','Дата','Date'],['tm','Время','Time'],['qn','Количество (кнопки плюс/минус)','Quantity (plus/minus buttons)'],['rg','Количество (ползунок)','Quantity (range slider)'],['ur','Ссылка','Website'],['tx','Текстовый комментарий','Text comment'],['ws','Отступ','White space'],['hd','Скрытое поле','Hidden field'],['fr','Калькулятор','Calculations field'],['st','Разбиение по шагам','Break in steps']];
		}
	}

	if(field=='li_rule'){
		var options=[['','Без проверки','No validate'],['email','E-mail','E-mail'],['phone','Телефон // 0123456789() +-','Phone // 0123456789() +-'],['name','Имя','Name'],['url','Сайт','Website']];			
	}

	if(field=='li_rows'){
		var options=[['1','1 строка','1 line'],['2','2 строки','2 lines'],['3','3 строки','3 lines'],['4','4 строки','4 lines'],['5','5 строк','5 lines'],['6','6 строк','6 lines'],['7','7 строк','7 lines'],['8','8 строк','8 lines'],['9','9 строк','9 lines'],['10','10 строк','10 lines']];			
	}

	if(field=='li_dateformat'){
		var options=[['DD-MM-YYYY','ДД-ММ-ГГГГ','DD-MM-YYYY'],['MM-DD-YYYY','ММ-ДД-ГГГГ','MM-DD-YYYY'],['YYYY-MM-DD','ГГГГ-ММ-ДД','YYYY-MM-DD']];			
	}

	if(field=='li_datediv'){
		var options=[['dash','-','-','/'],['slash','/','/'],['dot','.','.']];			
	}
	
	if(field=='li_radcb'){
		var options=[['rb','Один вариант ответа (радиокнопки)','One variant of answer (radio button)'],['cb','Несколько вариантов ответа (галочки)','Multiple variants of answer (checkboxes)']];			
	}	

	if(field=='li_imgratio'){
		var options=[['1_1','1:1','1:1'],['4_3','4:3','4:3'],['3_2','3:2','3:2'],['2_3','2:3','2:3'],['3_4','3:4','3:4']];			
	}	
	
	var str = '';
	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'" '+(field=='li_type' ? 'style="background-color:#fff;padding:20px;margin:-20px;margin-bottom:25px;"' : '' )+'>';
	str += '    <label class="pe-label">'+label+'</label>';
	str += '    <div class="pe-select">';
	str += '		<select class="pe-input pe-select" name="'+field+'">';
	for(var i=0; i<options.length; i++) {
	str += '			<option value="'+options[i][0]+'" '+(value==options[i][0] ? "selected" : "")+'>'+(lang=="RU" ? options[i][1] : options[i][2])+'</option>';
	}
	str += '		</select>';
	str += '    </div>';
	if(hint!=''){
	str += '    <div class="pe-hint">'+hint+'</div>';	
	}	
	str += '</div>';
	
	itemwrapper.append(str);
	
	var inp=itemwrapper.find("[name="+field+"]");
	
	inp.change(function() {
		var v=inp.val();
		edfo__setFieldValue(v,field,lid);
		
		if(field=='li_type'){
			
			var wrapper=$('.editlist__wrapper');
			var fields="li_type,li_title,li_ph,li_req".split(',');

			var item=edfo__item__getData__inJson(itemwrapper,fields);
						
			itemwrapper.find('.pe-form-group').remove();
			edfo__drawFields(item,lid);
			
			//console.log(item);
			
		}
		
	});
	
}


function edfo__setFieldValue(v,field,lid){
    var v_len=v.length;
    var v_orig=v;
    
    var msgerr = (lang=="RU" ? "Предупреждение: в поле слишком много текста. Мы настойчиво рекомендуем его сократить." : "Notice: there are a lot of data in this field. We stringly recommend decrese information.");

    if( v_len>3000 && field=='li_text' ){
	    alert( msgerr );
	    return;
    }

    if( v_len>3000 && field=='li_sb' ){
	    alert( msgerr );
	    return;
    }

    if( v_len>3000 && field=='li_variants' ){
	    alert( msgerr );
	    return;
    }
    
    if( v_len>200 && field!='li_text' && field!='li_label' && field!='li_sb' && field!='li_variants'){
	    alert( msgerr );
	    return;
    }
    
    if(v_len > 0){	    
	    if(field!='li_text' && field!='li_label'){
		    v=edfo__stripTags(v);
	    }
	
	    if(field!='li_text' && field!='li_label'){
			v = v.replace(/"/g, '');
			v = v.replace(/'/g, '');
	    }
	    
	    
	    if(field=='li_name'){
		    v = edfo__cleanInpName(v);
	    }
	    
	    if(field=='li_uckey'){
		    v = v.replace(/\s+/g, '');
		}

	    if(field=='li_uwkey'){
		    v = v.replace(/\s+/g, '');
		}
	    
	    if(v!=v_orig){
			$('.pe-form-group[data-lid="'+lid+'"]').find('[name="'+field+'"]').val(v);	    
	    }	    
	}
    	
	edfo__allitems__getData__inJson();
}

function edfo__allitems__getData__inJson(){
	
	var wrapper=$('.editlist__wrapper');
	
	if( wrapper.attr('data-init-status') != 'inited' ){
		console.log('Error getdatainjson: Initing listeditor not finished');
		return;
	}
	
	var fields=window.edfo__fields;
		
	var data={};
	var i=0;
	

    $('.pe-list-item').each(function(){
        var it = $(this);        
		var item=edfo__item__getData__inJson(it,fields);
		data[i]=item;
		i++;
    });	

	//
	//        
    //set auto names
    
    var arr_names={};
    var item;
    var type;
    var name;
    var nm;
    
	$.each(data, function (key, item) {
		
		type=item['li_type'];

		if(type!='ws' && type!='tx' && type!='st'){
			
			if(typeof item['li_name']!='undefined' && item['li_name']!=''){
				name=item['li_name'];
			}else{
				name='';
			}

			if(name==''){
				if(typeof item['li_title']!='undefined' && item['li_title']!='' && type!='em' && type!='ph' && type!='nm'){
					name=item['li_title'];
					name=edfo__cleanInpName(name,'replaceboxes');
				}
			}

			nm='';
			
			if(name==''){
				if(type=='em')nm='Email';
				if(type=='ph')nm='Phone';
				if(type=='nm')nm='Name';
				if(type=='in')nm='Input';
				if(type=='ta')nm='Textarea';
				if(type=='sb')nm='Selectbox';				
				if(type=='cb')nm='Checkbox';
				if(type=='fl')nm='File';
				if(type=='hd')nm='Hidden';
				if(type=='rd')nm='Radio';
				if(type=='dl')nm='Delivery';
				if(type=='da')nm='Date';
				if(type=='tm')nm='Time';
				if(type=='ur')nm='Url';
				if(type=='qn')nm='Quantity';
				if(type=='uc')nm='File';
				if(type=='uw')nm='File';
				if(type=='rg')nm='Range';
				if(type=='fr')nm='Formula';
				if(type=='ri')nm='Radioimage';
			}else{
				nm = name;
			}

			if(nm!=''){
				data[key]['li_nm']=nm;
				
				if(arr_names[nm]>0){
					arr_names[nm]++;
					data[key]['li_nm']=data[key]['li_nm']+'_'+arr_names[nm];
				}else{
					arr_names[nm]=1;
				}
			}
			
		}
			
	});		


	//
	//set auto datemask
	$.each(data, function (key, item) {
		
		if(item['li_type']=='da'){
			
			if(typeof item['li_dateformat']!='undefined' && typeof item['li_datediv']!='undefined'){
				var datediv=item['li_datediv'];
				var datemask=item['li_dateformat'];
				if(datediv=='dot')datemask=datemask.replace(/-/g,'.');
				if(datediv=='slash')datemask=datemask.replace(/-/g,'/');
				datemask=datemask.replace("MM","99");
				datemask=datemask.replace("DD","99");
				datemask=datemask.replace("YYYY","9999");
				
				item['li_datemask']=datemask;
			}else{
			}			
			
		}
			
	});					
    
    var datastr=JSON.stringify(data);
    
    var datastr_len=datastr.length;
    if(datastr_len>45000){
	    alert( (lang=="RU" ? "Ошибка: слишком много текста. Изменения не будут сохранены. Пожалуйста, удалите часть информации." : "Error: too much data. Changes can not be saved. Please delete some information.") );
	    return;
    }
    
    $('.editlist__data').val(datastr);
    //console.log(datastr);
	
}

function edfo__item__getData__inJson(it,fields){
    var item={};
    item['lid']=it.attr('data-listitem-id');
    item['ls']=it.attr('data-listitem-sort');
    item['loff']=it.attr('data-listitem-off');
    if(item['loff']=='y'){item['loff']='y';}else{item['loff']='';}
    
    var value='';
	fields.forEach(function(field, i, arr) {
		if(field!='lid' && field!='ls' && field!='loff'){
			value=it.find('[name='+field+']').val();
			if(typeof value!='undefined' && value!='')item[field]=value;
		}
	});	
	
	return(item);		
}

function edfo__checkLimitTotalItems(){
	var total=0;
	var inputs=0;
		
	var wrapper=$('.editlist__wrapper');
	var litype;
	wrapper.find('.pe-list-item').each(function() {
		total++;
		litype=$(this).find('[name="li_type"]').val();
		//console.log(litype);
		if(typeof litype!='undefined' && litype!='' && litype!='hd' && litype!='tx' && litype!='ws' && litype!='st'){
			inputs++;
		}
	});
	
	var max_total=100;
	var max_inputs=7;
	
	if(total>max_total){
		alert( (lang=='RU' ? 'Извините, новое поле не может быть добавлено. Вы создали максимальное кол-во ('+max_total+') полей.' : 'Sorry, limits out. You created maximum ('+max_total+') fields.') );		
		return('y');
	}

	if(window.edfo__params__formhorizontal=='y'){
		if(inputs>=max_inputs){
			alert( (lang=='RU' ? 'Извините, новое поле не может быть добавлено. Вы создали максимальное кол-во ('+max_inputs+') полей для ввода.' : 'Sorry, limits out. You created maximum ('+max_inputs+') input fields.') );		
			return('y');
		}
	}
	
	return('');
}

function edfo__add(){
	var limit_total=edfo__checkLimitTotalItems();
	if(limit_total=='y'){
		return;
	}
	
	var item={};
	var rnd=Math.floor(Math.random() * 1000) + 10;
	var newlid=Date.now() - rnd;
	item['lid']=newlid;
		
	var maxsort=edfo__getMaxSort();
	item['ls']=maxsort+10;
	
	edfo__drawItem(item);
	edfo__allitems__Resort();
	edfo__allitems__getData__inJson();
	
	var wrapper=$('.editlist__wrapper');
	var newitemwrapper=wrapper.find('[data-listitem-id='+newlid+']');
	$('#editformsxl').animate({scrollTop: $('#editformsxl').scrollTop() + newitemwrapper.position().top -100}, 700);	
	
}

function edfo__del(lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	
	itemwrapper.slideUp( "fast", function() {	
		itemwrapper.remove();		
		edfo__allitems__Resort();
		edfo__allitems__getData__inJson();		
	});
	
}

function edfo__off(lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');

	var off=itemwrapper.attr('data-listitem-off');
	if(off=='y'){
		itemwrapper.attr('data-listitem-off','');
		itemwrapper.css('opacity','');		
		itemwrapper.find('.pe-list-item-btn-offon').find('a').html( (lang=="RU" ? "Выключить" : "Off") );
	}else{
		itemwrapper.attr('data-listitem-off','y');
		itemwrapper.css('opacity','0.5');
		itemwrapper.find('.pe-list-item-btn-offon').find('a').html( (lang=="RU" ? "Включить" : "On") );		
	}	
	
	//edfo__allitems__Resort();
	edfo__allitems__getData__inJson();
}

function edfo__down(lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var nextitemwrapper=itemwrapper.next('.pe-list-item');
	if(nextitemwrapper.length==0)return;
	
	var content=itemwrapper.detach();
	nextitemwrapper.after(content);
		
	edfo__allitems__Resort();
	edfo__allitems__getData__inJson();
	
	setTimeout(function() {
		var newitemwrapper=wrapper.find('[data-listitem-id='+lid+']');
		$('#editformsxl').animate({scrollTop: $('#editformsxl').scrollTop() + newitemwrapper.position().top -100}, 700);	
	}, 100);
	
}

function edfo__up(lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var previtemwrapper=itemwrapper.prev('.pe-list-item');
	if(previtemwrapper.length==0)return;

	var content=itemwrapper.detach();
	previtemwrapper.before(content);
		
	edfo__allitems__Resort();
	edfo__allitems__getData__inJson();
	
	setTimeout(function() {
		var newitemwrapper=wrapper.find('[data-listitem-id='+lid+']');
		$('#editformsxl').animate({scrollTop: $('#editformsxl').scrollTop() + newitemwrapper.position().top -100}, 700);	
	}, 100);
	
}

function edfo__dupl(lid){
	
	var limit_total=edfo__checkLimitTotalItems();
	if(limit_total=='y'){
		return;
	}
	
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var fields=window.edfo__fields;	
	
	var item={};
	var rnd=Math.floor(Math.random() * 1000) + 10;
	var newlid=Date.now() - rnd;
	item['lid']=newlid;
	
	fields.forEach(function(field, i, arr) {
		if(field!='lid' && field!='ls'){
			item[field]=itemwrapper.find('[name='+field+']').val();
		}
	});
	
	var sort=parseInt(itemwrapper.attr('data-listitem-sort'))*1;
	item['ls']=sort+5;	
	
	var afterlid=lid;	
	edfo__drawItem(item,afterlid);
	
	edfo__allitems__Resort();	
	edfo__allitems__getData__inJson();
	
	setTimeout(function() {
		var newitemwrapper=wrapper.find('[data-listitem-id='+newlid+']');
		$('#editformsxl').animate({scrollTop: $('#editformsxl').scrollTop() + newitemwrapper.position().top -100}, 700);	
	}, 100);
	
}

function edfo__getMaxSort(){
	var wrapper=$('.editlist__wrapper');
	var max=0;
	var isort=0;
	wrapper.find('.pe-list-item').each(function() {
		isort=parseInt($(this).attr('data-listitem-sort'));
		if( max < isort )max=isort;
	});		
	return(max);
}

function edfo__allitems__Resort(){
	
	var wrapper=$('.editlist__wrapper');
	var sort=10;
	var i=0;
			
    wrapper.find('.pe-list-item').each(function(){
        var it = $(this);
        i++;
        sort=i*10;                        
        it.attr('data-listitem-sort',sort);
        it.find('.pe-list-item-i').html(i);
	    //console.log(sort);
    });	
	
}

function edfo__stripTags(str){
	if (str) {
		str = str.replace(/(<([^>]+)>)/ig,"");
	}
	return str;
}

function edfo__transliterate(word){
  var a = {"Ё":"YO","Й":"I","Ц":"TS","У":"U","К":"K","Е":"E","Н":"N","Г":"G","Ш":"SH","Щ":"SCH","З":"Z","Х":"H","Ъ":"'","ё":"yo","й":"i","ц":"ts","у":"u","к":"k","е":"e","н":"n","г":"g","ш":"sh","щ":"sch","з":"z","х":"h","ъ":"'","Ф":"F","Ы":"I","В":"V","А":"a","П":"P","Р":"R","О":"O","Л":"L","Д":"D","Ж":"ZH","Э":"E","ф":"f","ы":"i","в":"v","а":"a","п":"p","р":"r","о":"o","л":"l","д":"d","ж":"zh","э":"e","Я":"Ya","Ч":"CH","С":"S","М":"M","И":"I","Т":"T","Ь":"'","Б":"B","Ю":"YU","я":"ya","ч":"ch","с":"s","м":"m","и":"i","т":"t","ь":"'","б":"b","ю":"yu"};		
  return word.split('').map(function (char) { 
    return a[char] || char; 
  }).join("");
}

function edfo__HtmlEncode(val){ 
  return $("<div/>").text(val).html(); 
} 

function edfo__HtmlDecode(val){ 
  return $("<div/>").html(val).text(); 
}

function edfo__QuotesEncode(val){
 return val.toString().replace(/"/g, '\\"');
}

function edfo__escapeHtml(text) {
  var map = {
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#039;'
  };
  return text.replace(/[<>"']/g, function(m) { return map[m]; });
}

function edfo__cleanInpName(v,flag_replaceboxes){
    //v = edfo__transliterate(v);	
    v = v.replace(/[^0-9A-Za-zА-Яа-яЁёäöüÄÖÜßèéû \[\]\-\.\:\_]+/g,"");
    v = v.replace(/formservices/g, '');
    v = v.replace(/formskey/g, '');
    v = v.replace(/tildapayment/g, '');
    v = v.replace(/tilda/g, '');
    v = v.replace(/formspec-/g, '');
    v = v.replace(/form-spec-comments-/g, '');
    v = v.replace(/products-/g, '');
    v = v.replace(/amount-/g, '');	
    if(typeof flag_replaceboxes!='' && flag_replaceboxes=='replaceboxes'){
	    v = v.replace(/\[/g, '(');
	    v = v.replace(/\]/g, ')');
    }
    return v;
}







function edfo__drawUI__gallery(value,field,lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');

	if ( typeof value == 'undefined')value='';

	var label=field;
	if(label=='li_gallery')label = (lang=="RU" ? "Изображения: варианты значения" : "Images: variants");

	var tumaxwidth='';
	var tumaxheight='';


	var str = '';

	str += '<div class="pe-form-group" data-lid="'+lid+'" data-lfield="'+field+'">';
	str += '    <label class="pe-label">'+label+'</label>';
	str += '	<br>';
	str += '    <div class="js-gallery-upload-widget">';
	str += '    	<textarea name="'+field+'" class="js-gallery-json" style="display:none;" rows="1">'+value+'</textarea>';
	str += '	    <table style="width:100%;">';
	str += '		<tr>';
	str += '		<td style="width:240px; vertical-align:top;">';
	str += '		<div style="width:100%;">';
	str += '		<input type="text" name="li-tubutton" class="js-imgs-button" value="" data-tu-is-image="yes" data-tu-multiple="yes" '+tumaxwidth+' '+tumaxheight+' id="tuwidget'+lid+'_'+field+'" /><br>';
	str += '		</div>';
	str += '		</td>';
	str += '		<td style="vertical-align:top; text-align:right;">';
	str += '		</td>';

	str += '		</tr>';
	str += '	    </table>';
	str += '		<div class="js-gallery-items"></div>';
	str += '	</div>';
	str += '</div>';

	itemwrapper.append(str);


	/* draw exist items */
	if(value!=''){

		try {
			var obj = $.parseJSON(value);
		}catch(err){
			console.log('Some BUG');
		}

		if(typeof obj=='object'){
			$.each(obj, function( index, item ) {
				if(typeof item['img']!='undefined' && item['img']!=''){
					edfo__drawUI__gallery__drawitem(item['img'],item['alt'],field,lid);
				}
			});
		}
	}

	var fieldwrapper=itemwrapper.find('[data-lfield='+field+']');

	/* set main upload widget action */
    fieldwrapper.find('.js-imgs-button').each(function(){
        var $this = $(this), elementid;
        var elementid = $this.attr('id');

        if (! elementid) {
            elementid = 'tuwidget'+parseInt(Math.floor(Math.random() * (999999 - 99999 + 1)) + 99999);
            $this.attr('id', elementid);
        }

        TUWidget.init($this).done(function(file){
	        if (this.options.uploadMultiple) {
				for(i in file) {
					var src=file[i].tuInfo.cdnUrl;
					var uuid=file[i].tuInfo.uuid;
					edfo__drawUI__gallery__drawitem(src,'',field,lid,uuid);
				}
				edfo__drawUI__gallery__updatejsonvalue(field,lid);
            } else {
	            console.log('HMMM..!!');
            }

			setTimeout(function(){
				$('#'+elementid+'-previews').removeClass('tu-popup-progressbar-completed').removeClass('tu-processing').removeClass('tu-image-preview').removeClass('tu-success').removeClass('tu-complete').addClass('tu-popup-progressbar-start');
			},500);

        }).fail(function(file, message){
        });
    });

    edfo__drawUI__gallery__sortable(field,lid);

}


function edfo__drawUI__gallery__drawitem(src,alt,field,lid,uuid,replace_item_el){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var fieldwrapper=itemwrapper.find('[data-lfield='+field+']');
	var div=fieldwrapper.find('.js-gallery-items');

	var name=src;
	name = name.substr(name.length - 30);

	if(typeof uuid=='undefined' || uuid==''){
		uuid=Math.floor(Math.random() * 10000000) + 1000;
	}

	if(typeof alt=='undefined'){
		alt='';
	}

	var fields='';
	var needalt='';

	var str='';
	str += '<div class="js-gallery-item" data-uuid="'+uuid+'" data-src="'+src+'" data-alt="'+alt+'" style="margin:10px 0;">';
	str += '<table style="font-size:12px;">';
	str += '<tr>';
	str += '<td>';
	str += '<img src="'+src+'" width="180" class="js-img-thumb" id="lst'+lid+'_'+field+'id_uuid'+uuid+'" />';
	str += '</td>';
	str += '<td style="padding-left:20px; padding-right:20px; width:500px; font-size:12px; color:#333;">';
	str += '	<div>'+(lang=='RU'?'Подпись под фото':'Title under image')+'</div>';
	str += '    <input type="text" class="js-img-variant-alt" value="'+alt+'" style="outline:none !important;width:100%;font-size:14px;height:27px;" />';
	str += '</td>';
	str += '<td><div class="js-img-updatebtn"><a href="javascript:edfo__drawUI__gallery__update(\''+field+'\',\''+lid+'\',\''+uuid+'\');">'+(lang=="RU" ? "Заменить&nbsp;фото" : "Replace&nbsp;image")+'</a></div></td>';
	str += '<td style="padding-left:10px; width:20px;"><a href="javascript:edfo__drawUI__gallery__del(\''+field+'\',\''+lid+'\',\''+uuid+'\');"><span class="glyphicon glyphicon-trash"></span></a></td>';
	str += '</tr>';
	str += '</table>';

	str += '</div>';

	/*add or replace */
	if(typeof replace_item_el=='object'){
		replace_item_el.replaceWith(str);
	}else{
		div.append(str);
	}

	var el=div.find("[data-uuid="+uuid+"]");

    el.find('.js-img-updatebtn').each(function(){
        var $this = $(this), elementid;
        var elementid = $this.attr('id');

        if (! elementid) {
            elementid = 'tuwidget'+parseInt(Math.floor(Math.random() * (999999 - 99999 + 1)) + 99999);
            $this.attr('id', elementid);
        }

        TUWidget.init($this).done(function(file){

	    	edfo__drawUI__gallery__drawitem(file.tuInfo.cdnUrl,'',field,lid,'',el);
	    	edfo__drawUI__gallery__updatejsonvalue(field,lid);

        }).fail(function(file, message){
        });
    });

	var inpalt=el.find('.js-img-variant-alt');

	inpalt.change(function() {
		var val=inpalt.val();
		if(typeof val=='undefined')val='';
		var map = {
		    '<': '&lt;',
		    '>': '&gt;',
		    '"': '&quot;'
		};
		val = val.replace(/[<>"]/g, function(m) { return map[m]; });
		el.attr('data-alt',val);
		edfo__drawUI__gallery__updatejsonvalue(field,lid);
	});

}

function edfo__drawUI__gallery__updatejsonvalue(field,lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var fieldwrapper=itemwrapper.find('[data-lfield='+field+']');

	var el,src,alt;
	var arr=[];
	var itemObj={};
	fieldwrapper.find('.js-gallery-items').find('.js-gallery-item').each(function(){
		el=$(this);
		src=el.attr('data-src');
		alt=el.attr('data-alt');
		itemObj={};
		itemObj['img']=src;
		if(typeof alt!='undefined' && alt!='')itemObj['alt']=alt;
		arr.push(itemObj);
	});
	var jsonString = JSON.stringify(arr);

	var inp=fieldwrapper.find("[name="+field+"]");
	inp.val(jsonString);
	inp.trigger('change');
}

function edfo__drawUI__gallery__del(field,lid,uuid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var fieldwrapper=itemwrapper.find('[data-lfield='+field+']');
	var div=fieldwrapper.find('.js-gallery-items').find('[data-uuid='+uuid+']');
	div.remove('');
	edfo__drawUI__gallery__updatejsonvalue(field,lid);
}


function edfo__drawUI__gallery__sortable(field,lid){
	var wrapper=$('.editlist__wrapper');
	var itemwrapper=wrapper.find('[data-listitem-id='+lid+']');
	var fieldwrapper=itemwrapper.find('[data-lfield='+field+']');

    fieldwrapper.find('.js-gallery-items').sortable({
    	helper:'clone',
    	opacity: 0.8,
    	revert: true,
    	tolerance :'pointer',
    	axis:'y',
    	update: function(event, ui) {
			edfo__drawUI__gallery__updatejsonvalue(field,lid);
	    }
    });

}

